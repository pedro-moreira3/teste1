---------------------------------PRÃ‰ UPDATES---------------------------------
ALTER TABLE DADOS_BASICOS ALTER COLUMN RG TYPE VARCHAR(20);
ALTER TABLE DADOS_BASICOS ALTER COLUMN NOME TYPE VARCHAR(250);
ALTER TABLE ORCAMENTO_PROCEDIMENTO RENAME TO ORCAMENTO_PROCEDIMENTO_OLD;
--JA EXISTE --ALTER TABLE DADOS_BASICOS ADD COLUMN ID_MIGRACAO TEXT NULL;
--JA EXISTE --ALTER TABLE PACIENTE ADD COLUMN OBSERVACAO TEXT NULL;

---------------------------------CREATES---------------------------------
CREATE TABLE USUARIO_ACAO (
    ID SERIAL PRIMARY KEY,
    NOME_METODO VARCHAR(100) NOT NULL,
    NOME_CLASSE_CHAMADA VARCHAR(100),
    OBJETO TEXT NOT NULL,
    DATA_ACAO TIMESTAMP(6) NOT NULL,
    
    PROFISSIONAL_ID BIGINT NOT NULL REFERENCES PROFISSIONAL(ID),
	PACIENTE_ID BIGINT NOT NULL REFERENCES PACIENTE(ID)
);
CREATE TABLE ORCAMENTO_ITEM (
	ID SERIAL PRIMARY KEY,
	ATIVO VARCHAR(1) NOT NULL,
	DATA_ALTERACAO_STATUS TIMESTAMP(10),
	
	DESCRICAO VARCHAR(255) NOT NULL,
	DESCONTO_RATEIO DECIMAL(11, 2) NULL,
	VALOR DECIMAL(11, 2) NOT NULL,
	VALOR_ORIGINAL DECIMAL(11, 2) NOT NULL,
	INCLUSO VARCHAR(1) NULL,
	
	ALTERACAO_STATUS_ID BIGINT REFERENCES PROFISSIONAL(ID),
	ORCAMENTO_ID BIGINT NOT NULL REFERENCES ORCAMENTO(ID)
);
CREATE TABLE ORCAMENTO_PROCEDIMENTO (
	ID SERIAL PRIMARY KEY,
	ORCAMENTO_ITEM_ID BIGINT NOT NULL REFERENCES ORCAMENTO_ITEM(ID),
	PLANO_TRATAMENTO_PROCEDIMENTO_ID BIGINT NOT NULL REFERENCES PLANO_TRATAMENTO_PROCEDIMENTO(ID)
);
CREATE TABLE FATURA (
	ID SERIAL PRIMARY KEY,
	DATA_CRIACAO TIMESTAMP(10) NOT NULL,
	ATIVO VARCHAR(1),
	DATA_ALTERACAO_STATUS TIMESTAMP(10),
	TIPO_FATURA VARCHAR(10) NOT NULL,
	
	PACIENTE_ID BIGINT REFERENCES PACIENTE(ID),
	PROFISSIONAL_ID BIGINT REFERENCES PROFISSIONAL(ID),
	ALTERACAO_STATUS_ID BIGINT REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE FATURA_ITEM (
	ID SERIAL PRIMARY KEY,
	DESCRICAO_ITEM VARCHAR(256) NOT NULL,
	VALOR_ITEM DECIMAL(10, 4) NOT NULL,
	DATA_CRIACAO TIMESTAMP(10) NOT NULL,
	TIPO_SALDO VARCHAR(1) NOT NULL,
	ATIVO VARCHAR(1),
	DATA_ALTERACAO_STATUS TIMESTAMP(10),
	
	FATURA_ID BIGINT NOT NULL REFERENCES FATURA(ID),
	ALTERACAO_STATUS_ID BIGINT REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE FATURA_ITEM_TROCA (
	ID SERIAL PRIMARY KEY,
	DATA_ALTERACAO TIMESTAMP(10) NOT NULL,
	OBSERVACAO TEXT NULL,
	
	PROFISSIONAL_NOVO_ID BIGINT NOT NULL REFERENCES PROFISSIONAL(ID),
	PROFISSIONAL_ANTIGO_ID BIGINT NULL REFERENCES PROFISSIONAL(ID),
	PROFISSIONAL_ALTERACAO_ID BIGINT NOT NULL REFERENCES PROFISSIONAL(ID),
	
	FATURA_ITEM_NOVO_ID BIGINT NOT NULL REFERENCES FATURA_ITEM(ID),
	FATURA_ITEM_ANTIGO_ID BIGINT NULL REFERENCES FATURA_ITEM(ID)
);
CREATE TABLE FATURA_ITEM_ORCAMENTO_ITEM (
	ID SERIAL PRIMARY KEY,
	ORCAMENTO_ITEM_ID BIGINT NOT NULL REFERENCES ORCAMENTO_ITEM(ID),
	FATURA_ITEM_ID BIGINT NOT NULL REFERENCES FATURA_ITEM(ID)
);
CREATE TABLE PACIENTE_SALDO (
	ID SERIAL PRIMARY KEY,
	TIPO_SALDO VARCHAR(1) NOT NULL,
	VALOR_ITEM DECIMAL(10, 4) NOT NULL,
	DATA_CRIACAO TIMESTAMP(10) NOT NULL,
	PACIENTE_ID BIGINT NOT NULL REFERENCES PACIENTE(ID)
);
CREATE TABLE PACIENTE_SALDO_ORIGEM_FATURA (
	ID SERIAL PRIMARY KEY,
	PACIENTE_SALDO_ID BIGINT NOT NULL REFERENCES PACIENTE_SALDO(ID),
	FATURA_ID BIGINT NOT NULL REFERENCES FATURA(ID)
);
CREATE TABLE REPASSE_FATURAS (
	ID SERIAL PRIMARY KEY,
	VALOR_CALCULO NUMERIC(5, 2) NOT NULL,
	TIPO_CALCULO VARCHAR(10) NOT NULL,
	
	FATURA_ORIGEM_ID BIGINT NOT NULL REFERENCES FATURA(ID),
	FATURA_REPASSE_ID BIGINT NOT NULL REFERENCES FATURA(ID)
);
CREATE TABLE REPASSE_FATURAS_ITEM (
	ID SERIAL PRIMARY KEY,
	FATURA_ITEM_ORIGEM_ID BIGINT NOT NULL REFERENCES FATURA_ITEM(ID),
	FATURA_ITEM_REPASSE_ID BIGINT NOT NULL REFERENCES FATURA_ITEM(ID),
	REPASSE_FATURAS_ID BIGINT NOT NULL REFERENCES REPASSE_FATURAS(ID)
);
CREATE TABLE REPASSE_FATURAS_LANCAMENTO (
	ID SERIAL PRIMARY KEY,
	FATURA_ITEM_ID BIGINT NOT NULL REFERENCES FATURA_ITEM(ID),
	LANCAMENTO_ORIGEM_ID BIGINT NOT NULL REFERENCES LANCAMENTO(ID),
	LANCAMENTO_REPASSE_ID BIGINT NOT NULL REFERENCES LANCAMENTO(ID),
	REPASSE_FATURAS_ID BIGINT NOT NULL REFERENCES REPASSE_FATURAS(ID)
);

CREATE TABLE ESTOQUE (
	ID SERIAL PRIMARY KEY,
	ID_LOCAL BIGINT REFERENCES LOCAL(ID),
	ID_MATERIAL BIGINT REFERENCES MATERIAL(ID),
	QUANTIDADE NUMERIC(10,2)
);
CREATE TABLE TRANSFERENCIA_ESTOQUE(
	ID SERIAL PRIMARY KEY,
	ID_LOCAL_ORIGEM BIGINT REFERENCES LOCAL(ID),
	ID_LOCAL_DESTINO BIGINT REFERENCES LOCAL(ID),
	ID_MATERIAL BIGINT REFERENCES MATERIAL(ID),
	ID_PROFISSIONAL BIGINT REFERENCES PROFISSIONAL(ID),
	DESCRICAO varchar (500),
	DATA timestamp without time zone,
	QUANTIDADE BIGINT
);
CREATE TABLE TRANSFERENCIA_CONTA(
	ID SERIAL PRIMARY KEY,
	ID_CONTA_ORIGEM BIGINT REFERENCES CONTA(ID),
	ID_CONTA_DESTINO BIGINT REFERENCES CONTA(ID),
	DESCRICAO varchar (500),
	DATA timestamp without time zone,
	VALOR NUMERIC(14,4),
	ID_PROFISSIONAL BIGINT REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE REGIAO_REGIAO (
	ID SERIAL PRIMARY KEY,
	REGIAO VARCHAR(255) NOT NULL,
	EXCLUIDO VARCHAR(1) NOT NULL DEFAULT 'N',
	DATA_EXCLUSAO TIMESTAMP(10) NULL,
	
	EXCLUIDO_POR BIGINT NULL REFERENCES PROFISSIONAL(ID),
	ODONTOGRAMA_ID BIGINT NULL REFERENCES ODONTOGRAMA(ID),
	ID_STATUS_DENTE BIGINT NOT NULL REFERENCES STATUS_DENTE(ID)
);
CREATE TABLE AFILIACAO (
	ID SERIAL PRIMARY KEY,
	NOME VARCHAR(255) NOT NULL,
	EMAIL VARCHAR(255) NULL,
	TELEFONE VARCHAR(50) NULL,
	
	ATIVO VARCHAR(1) NOT NULL DEFAULT 'N',
	DATA_ALTERACAO_STATUS TIMESTAMP(10) NULL,
	ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE RECIBO_REPASSE_PROFISSIONAL (
	ID SERIAL PRIMARY KEY,
	DATA_CRIACAO TIMESTAMP(10) NOT NULL,
	DESCRICAO VARCHAR(255) NULL,
	OBSERVACAO TEXT NULL,

	ATIVO VARCHAR(1) NULL,
	APROVADO VARCHAR(1) NULL,
	DATA_APROVACAO TIMESTAMP(10) NULL,
	DATA_ALTERACAO_STATUS TIMESTAMP(10) NULL,
	
	APROVADO_POR BIGINT NULL REFERENCES PROFISSIONAL(ID),
	CRIADO_POR BIGINT NOT NULL REFERENCES PROFISSIONAL(ID),
	ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID),
	PROFISSIONAL_ID BIGINT NOT NULL REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE RECIBO_REPASSE_PROFISSIONAL_LANCAMENTO (
	ID SERIAL PRIMARY KEY,
	VALIDADO_AO_APROVAR_RECIBO VARCHAR(1) NOT NULL,
	LANCAMENTO_ID BIGINT NOT NULL REFERENCES LANCAMENTO(ID),
	RECIBO_ID BIGINT NOT NULL REFERENCES RECIBO_REPASSE_PROFISSIONAL(ID)
);
CREATE TABLE ORCAMENTO_PLANEJAMENTO (
	ID SERIAL PRIMARY KEY,
	VALOR DECIMAL(12,2) NOT NULL,
	N_PARCELA INTEGER NOT NULL,
	DATA_PAGAMENTO TIMESTAMP(10) NOT NULL,
	DATA_CREDITO TIMESTAMP(10) NOT NULL,
	DATA_CRIACAO TIMESTAMP(10) NOT NULL,
	
	ATIVO VARCHAR(1) NOT NULL DEFAULT 'S',
	DATA_ALTERACAO_STATUS TIMESTAMP(10),
	
	TARIFA_ID BIGINT NULL REFERENCES TARIFA(ID),
	ORCAMENTO_ID BIGINT NOT NULL REFERENCES ORCAMENTO(ID),
	CRIADO_POR_ID BIGINT NULL REFERENCES PROFISSIONAL(ID),
	FORMA_PAGAMENTO_ID BIGINT NOT NULL REFERENCES DOMINIO(ID),
	ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID)
);
CREATE TABLE EVOLUCAO_PLANO_TRATAMENTO_PROCEDIMENTO (
	ID SERIAL PRIMARY KEY,
	PLANO_TRATAMENTO VARCHAR(255) NULL,
	PLANO_TRATAMENTO_PROCEDIMENTO TEXT NULL,
	REGIAO_DENTE_FACE VARCHAR(255) NULL,
	ACAO_EVOLUCAO VARCHAR(255) NULL,
	
	EVOLUCAO_ID BIGINT NOT NULL REFERENCES EVOLUCAO(ID),
	PLANO_TRATAMENTO_PROCEDIMENTO_ID BIGINT NULL REFERENCES PLANO_TRATAMENTO_PROCEDIMENTO(ID)
);

---------------------------------ALTER/UPDATE---------------------------------
--ALTER TABLE ORCAMENTO_ITEM ADD COLUMN PTP_ID BIGINT NULL REFERENCES PLANO_TRATAMENTO_PROCEDIMENTO(ID);
ALTER TABLE ORCAMENTO ALTER COLUMN ID_PLANO_TRATAMENTO DROP NOT NULL;
ALTER TABLE ORCAMENTO ADD COLUMN DATA_CRIACAO TIMESTAMP(10);
ALTER TABLE ORCAMENTO ADD COLUMN APROVADO VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE ORCAMENTO ADD COLUMN PROFISSIONAL_APROVACAO_ID BIGINT REFERENCES PROFISSIONAL(ID);
ALTER TABLE ORCAMENTO RENAME COLUMN ID_PROFISSIONAL TO PROFISSIONAL_CRIACAO_ID;
ALTER TABLE ORCAMENTO ADD COLUMN PACIENTE_ID BIGINT REFERENCES PACIENTE(ID);
ALTER TABLE PLANO_TRATAMENTO ADD COLUMN PROCEDIMENTO_PADRAO_ID BIGINT REFERENCES PROCEDIMENTO(ID);
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN VALOR_CONVENIO VARCHAR(1);
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN JUSTIFICATIVA_EXCLUSAO_ID BIGINT REFERENCES DOMINIO(ID);
ALTER TABLE PLANO_TRATAMENTO RENAME COLUMN EXCLUIDO TO ATIVO;
ALTER TABLE PLANO_TRATAMENTO RENAME COLUMN EXCLUIDO_POR TO ALTERACAO_STATUS_ID;
ALTER TABLE PLANO_TRATAMENTO RENAME COLUMN DATA_EXCLUSAO TO DATA_ALTERACAO_STATUS;
ALTER TABLE ORCAMENTO RENAME COLUMN EXCLUIDO TO ATIVO;
ALTER TABLE ORCAMENTO RENAME COLUMN EXCLUIDO_POR TO ALTERACAO_STATUS_ID;
ALTER TABLE ORCAMENTO RENAME COLUMN DATA_EXCLUSAO TO DATA_ALTERACAO_STATUS;
ALTER TABLE LANCAMENTO_CONTABIL ADD COLUMN DATA_CRIACAO TIMESTAMP(10);
ALTER TABLE LANCAMENTO ADD COLUMN DATA_CRIACAO TIMESTAMP(10);
ALTER TABLE LANCAMENTO RENAME COLUMN EXCLUIDO TO ATIVO;
ALTER TABLE LANCAMENTO RENAME COLUMN EXCLUIDO_POR TO ALTERACAO_STATUS_ID;
ALTER TABLE LANCAMENTO RENAME COLUMN DATA_EXCLUSAO TO DATA_ALTERACAO_STATUS;
ALTER TABLE FATURA ADD COLUMN ORCAMENTO_ID BIGINT NULL REFERENCES ORCAMENTO(ID);
ALTER TABLE FATURA ADD COLUMN FATURA_ORIGEM_ID BIGINT NULL REFERENCES FATURA(ID);
ALTER TABLE FATURA ADD COLUMN PTP_ORIGEM_ID BIGINT NULL REFERENCES PLANO_TRATAMENTO_PROCEDIMENTO(ID);
ALTER TABLE FATURA_ITEM ADD COLUMN ORCAMENTO_ITEM_ID BIGINT NULL REFERENCES ORCAMENTO_ITEM(ID);
ALTER TABLE FATURA_ITEM ADD COLUMN FATURA_ITEM_ID BIGINT NULL REFERENCES FATURA_ITEM(ID);
ALTER TABLE LANCAMENTO ADD COLUMN FATURA_ID BIGINT NULL REFERENCES FATURA(ID);
ALTER TABLE ORCAMENTO_ITEM ADD COLUMN PTP_ID BIGINT NULL REFERENCES PLANO_TRATAMENTO_PROCEDIMENTO(ID);

ALTER TABLE MATERIAL_INDISPONIVEL RENAME TO EMPRESTIMO_KIT;
ALTER TABLE EMPRESTIMO_KIT DROP COLUMN VALOR;
ALTER TABLE EMPRESTIMO_KIT DROP COLUMN DATA_EXCLUSAO;
ALTER TABLE EMPRESTIMO_KIT DROP COLUMN EXCLUIDO_POR;
ALTER TABLE EMPRESTIMO_KIT DROP COLUMN EXCLUIDO;
ALTER TABLE ESTERILIZACAO_KIT RENAME COLUMN ID_MATERIAL_INDISPONIVEL TO EMPRESTIMO_KIT_ID;
ALTER TABLE LAVAGEM_KIT RENAME COLUMN ID_MATERIAL_INDISPONIVEL TO EMPRESTIMO_KIT_ID;
ALTER TABLE ABASTECIMENTO RENAME TO EMPRESTIMO_UNITARIO;
ALTER TABLE EMPRESTIMO_UNITARIO DROP COLUMN VALOR;
ALTER TABLE EMPRESTIMO_UNITARIO DROP COLUMN DATA_EXCLUSAO;
ALTER TABLE EMPRESTIMO_UNITARIO DROP COLUMN EXCLUIDO_POR;
ALTER TABLE EMPRESTIMO_UNITARIO DROP COLUMN EXCLUIDO;
ALTER TABLE LAVAGEM_KIT RENAME COLUMN ID_ABASTECIMENTO TO EMPRESTIMO_UNITARIO_ID;
ALTER TABLE MATERIAL_LOG RENAME COLUMN ID_ABASTECIMENTO TO EMPRESTIMO_UNITARIO_ID;
ALTER TABLE ESTERILIZACAO_KIT RENAME COLUMN ID_ABASTECIMENTO TO EMPRESTIMO_UNITARIO_ID;
ALTER TABLE ABASTECIMENTO_AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO  RENAME COLUMN ID_ABASTECIMENTO TO EMPRESTIMO_UNITARIO_ID;
ALTER TABLE ABASTECIMENTO_AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO RENAME TO EMPRESTIMO_UNITARIO_AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO;
ALTER TABLE MATERIAL_LOG RENAME COLUMN ID_MATERIAL_INDISPONIVEL TO EMPRESTIMO_KIT_ID;
--alter table material drop column id_local
--alter table material drop column quantidade_atual
--alter table material drop column QUANTIDADE_UNIDADE;
--alter table material drop column QUANTIDADE_TOTAL;
ALTER TABLE material RENAME COLUMN QUANTIDADE TO QUANTIDADE_PACOTES;
ALTER TABLE CONTA RENAME TO PLANO_CONTA;
ALTER TABLE PACIENTE_SALDO RENAME TO CONTA;
ALTER TABLE CONTA RENAME COLUMN TIPO_SALDO TO TIPO_MOVIMENTACAO;
--NAO EXISTE --ALTER TABLE CONTA RENAME COLUMN PACIENTE_SALDO TO SALDO;
--CORRECAO ANTERIOR --ALTER TABLE CONTA ADD COLUMN SALDO NUMERIC(10, 4) NOT NULL;
ALTER TABLE CONTA ADD COLUMN TIPO_CONTA VARCHAR(50);
ALTER TABLE CONTA ADD COLUMN PROFISSIONAL_ID BIGINT REFERENCES PROFISSIONAL(ID);
ALTER TABLE CONTA ADD COLUMN EMPRESA_ID BIGINT REFERENCES SEG_EMPRESA(EMP_INT_COD);
alter table PACIENTE_SALDO_ORIGEM_FATURA drop column paciente_saldo_id;
alter table PACIENTE_SALDO_ORIGEM_FATURA ADD COLUMN CONTA_ID BIGINT REFERENCES CONTA(ID);
alter table PACIENTE_SALDO_ORIGEM_FATURA RENAME TO CONTA_ORIGEM_FATURA;
ALTER TABLE CONTA ADD COLUMN ATIVO VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE CONTA ADD COLUMN ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE CONTA ADD COLUMN DATA_ALTERACAO_STATUS TIMESTAMP(10) NULL; 
ALTER TABLE CONTA drop column tipo_movimentacao;
ALTER TABLE CONTA RENAME COLUMN VALOR_ITEM TO SALDO;
alter table CONTA alter column paciente_id drop not null;
alter table CONTA alter column profissional_id drop not null;
alter table CONTA alter column empresa_id drop not null;
alter table CONTA_ORIGEM_FATURA RENAME TO TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO;
alter table TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO drop column CONTA_ID;
alter table TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO drop column FATURA_ID;
alter table TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO ADD COLUMN TRANSFERENCIA_CONTA_ID BIGINT REFERENCES TRANSFERENCIA_CONTA(ID);
alter table TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO ADD COLUMN LANCAMENTO_ID BIGINT REFERENCES LANCAMENTO(ID);
ALTER TABLE TRANSFERENCIA_CONTA ADD COLUMN ATIVO VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE TRANSFERENCIA_CONTA ADD COLUMN ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE TRANSFERENCIA_CONTA ADD COLUMN DATA_ALTERACAO_STATUS TIMESTAMP(10) NULL;
ALTER TABLE FATURA_ITEM ADD COLUMN valor_com_desconto NUMERIC(14,2);

ALTER TABLE AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN ATIVO VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN ALTERACAO_STATUS_ID BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE AGENDAMENTO_PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN DATA_ALTERACAO_STATUS TIMESTAMP(10) NULL;
ALTER TABLE SEG_EMPRESA ADD COLUMN EMP_STR_WPP_MESSAGE_AGENDAMENTO TEXT NULL;
ALTER TABLE SEG_EMPRESA ADD COLUMN EMP_STR_WPP_MESSAGE_PACIENTE TEXT NULL;
ALTER TABLE SEG_EMPRESA ADD COLUMN EMP_STR_WPP_MESSAGE_RETORNO TEXT NULL;
ALTER TABLE PACIENTE ADD COLUMN CRIADO_POR BIGINT NULL;

ALTER TABLE TRANSFERENCIA_CONTA ADD COLUMN LANCAMENTO_ID BIGINT REFERENCES LANCAMENTO(ID);

---------------------------------MIGRACOES SEM INSERT---------------------------------
UPDATE ORCAMENTO SET PACIENTE_ID = (
	SELECT PT.ID_PACIENTE FROM PLANO_TRATAMENTO PT WHERE PT.ID = ORCAMENTO.ID_PLANO_TRATAMENTO
);
UPDATE PLANO_TRATAMENTO SET ATIVO = (
	(CASE WHEN (SELECT PT.ATIVO FROM PLANO_TRATAMENTO PT WHERE PT.ID = PLANO_TRATAMENTO.ID) = 'S'
	THEN 'N'
	ELSE (CASE WHEN (SELECT PT.ATIVO FROM PLANO_TRATAMENTO PT WHERE PT.ID = PLANO_TRATAMENTO.ID) = 'N'
			THEN 'S' ELSE NULL END
		)
	END)
);
UPDATE ORCAMENTO SET ATIVO = (
	(CASE WHEN (SELECT PT.ATIVO FROM ORCAMENTO PT WHERE PT.ID = ORCAMENTO.ID) = 'S'
	THEN 'N'
	ELSE (CASE WHEN (SELECT PT.ATIVO FROM ORCAMENTO PT WHERE PT.ID = ORCAMENTO.ID) = 'N'
			THEN 'S' ELSE NULL END
		)
	END)
);
UPDATE LANCAMENTO SET ATIVO = (
	(CASE WHEN (SELECT PT.ATIVO FROM LANCAMENTO PT WHERE PT.ID = LANCAMENTO.ID) = 'S'
	THEN 'N'
	ELSE (CASE WHEN (SELECT PT.ATIVO FROM LANCAMENTO PT WHERE PT.ID = LANCAMENTO.ID) = 'N'
			THEN 'S' ELSE NULL END
		)
	END)
);
UPDATE ORCAMENTO SET APROVADO = 'S' WHERE ID IN (
	SELECT DISTINCT L.ID_ORCAMENTO FROM LANCAMENTO L
	WHERE L.ID_ORCAMENTO IS NOT NULL AND L.ATIVO = 'S'
);

---------------------------------MIGRACOES SEM INSERT (TELAS)---------------------------------
update seg_objeto set obj_str_caminho = 'emprestimoKit.jsf' where obj_str_caminho ilike '%controlema%';
update seg_objeto set obj_str_caminho = 'emprestimoUnitario.jsf' where obj_str_caminho = 'abastecimento.jsf';
update seg_objeto set obj_str_caminho = 'devolucaoEmprestimoUnitario.jsf' where obj_str_caminho = 'devolucaoAbastecimento.jsf';

UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'RelatÃ³rio de AvaliaÃ§Ã£o de Atendimentos';
--UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Registro de Custos Diretos';
--UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Recebimento dos Pacientes';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Repasse dos Profissionais';
--UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Pagamentos/Recebimentos';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'RelatÃ³rio de Resultados';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'RelatÃ³rio de Bloqueios';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Rel. Atendimento';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'AtualizaÃ§Ãµes';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Dashboard';

UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 2 WHERE OBJ_STR_DES = 'Cadastro da ClÃ­nica';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 3 WHERE OBJ_STR_DES = 'Cadastro de Especialidades';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 4 WHERE OBJ_STR_DES = 'Cadastro de Procedimentos';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 5 WHERE OBJ_STR_DES = 'Cadastro de ConvÃªnios';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 6 WHERE OBJ_STR_DES = 'ConvÃªnio-Procedimento';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 7 WHERE OBJ_STR_DES = 'Cadastro de Profissionais';
UPDATE SEG_OBJETO SET OBJ_INT_ORDEM = 8 WHERE OBJ_STR_DES = 'Config. de Anamnese';

UPDATE SEG_OBJETO SET OBJ_STR_DES = 'Agenda' WHERE OBJ_STR_DES = 'Agendamento';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'DevoluÃ§Ã£o UnitÃ¡ria' WHERE OBJ_STR_DES = 'UnitÃ¡ria';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Agendamento' WHERE OBJ_STR_DES = 'RelatÃ³rio de Atendimento';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Agenda' WHERE OBJ_STR_DES = 'RelatÃ³rio de Agendamento';

UPDATE SEG_OBJETO SET OBJ_INT_CODPAI = (
	SELECT OBJ_INT_COD FROM SEG_OBJETO
	WHERE SEG_OBJETO.OBJ_STR_DES = 'EmissÃ£o de Documentos'
) WHERE OBJ_STR_DES = 'ConfiguraÃ§Ã£o de Documentos';
UPDATE SEG_OBJETO SET OBJ_INT_CODPAI = (
	SELECT OBJ_INT_COD FROM SEG_OBJETO
	WHERE SEG_OBJETO.OBJ_STR_DES = 'ClÃ­nica'
) WHERE OBJ_STR_DES = 'RelatÃ³rio de OrÃ§amentos';
---------------------------------MIGRAÃ‡ÃƒO INSERT TELAS---------------------------------
INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'Recebimento dos Pacientes',
	'A', 'faturaPagto.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_STR_DES ILIKE 'FINANCEIRO'
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'Recebimento dos Pacientes'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'PACIENTE';
INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'Repasse Profissional',
	'A', 'repasseProfissional.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_STR_DES ILIKE 'FINANCEIRO'
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'Repasse Profissional'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'Repasse dos Profissionais';
INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'RelatÃ³rio de Bloqueios',
	'A', 'relatoriobloqueio.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_STR_DES ILIKE 'ClÃ­nica'
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'RelatÃ³rio de Bloqueios'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'Agendamento';
INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'RelatÃ³rio de Faturas',
	'A', 'relatorioFaturas.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_INT_COD = 11
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'RelatÃ³rio de Faturas'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'Faturas';

INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'Recibo de Repasses',
	'A', 'reciboRepasseProfissional.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_STR_DES ILIKE 'FINANCEIRO'
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'Recibo de Repasses'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'REPASSE DOS PROFISSIONAIS'
  AND O.OBJ_CHA_STS = 'A';
 
INSERT INTO SEG_OBJETO(OBJ_INT_CODPAI, OBJ_STR_DES, OBJ_CHA_STS, OBJ_STR_CAMINHO,
                       SIS_INT_COD, OBJ_INT_ORDEM, OBJ_CHA_TIPO, OBJ_STR_ICON)
SELECT
	OBJ_INT_COD, 'MovimentaÃ§Ãµes',
	'A', 'movimentacoes.jsf',
	123, MAX(OBJ_INT_ORDEM) + 1,
	'T', NULL
FROM SEG_OBJETO
WHERE OBJ_STR_DES ILIKE 'FINANCEIRO'
GROUP BY OBJ_INT_COD, OBJ_INT_ORDEM
LIMIT 1;
INSERT INTO OBJETO_PROFISSIONAL(OBJ_INT_COD, ID_PROFISSIONAL)
SELECT
	(
		SELECT OBJ_INT_COD FROM SEG_OBJETO
		WHERE OBJ_STR_DES LIKE 'MovimentaÃ§Ãµes'
		LIMIT 1
	),
	OP.ID_PROFISSIONAL
FROM OBJETO_PROFISSIONAL OP
LEFT JOIN SEG_OBJETO O
	ON O.OBJ_INT_COD = OP.OBJ_INT_COD
WHERE O.OBJ_STR_DES ILIKE 'Pagamentos/Recebimentos';

---------------------------------CREATE VIEWS---------------------------------
CREATE VIEW REPASSE_FATURAS_CREATE AS
SELECT DISTINCT
	PTP.ID_PLANO_TRATAMENTO AS "PTP_ID",
	PTP.FINALIZADO_POR AS "PTP_FP",
	F.ID AS "F_ID"
FROM ORCAMENTO_ITEM OI
LEFT JOIN ORCAMENTO O
	ON O.ID = OI.ORCAMENTO_ID
LEFT JOIN ORCAMENTO_PROCEDIMENTO OP
	ON OP.ORCAMENTO_ITEM_ID = OI.ID
LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP
	ON PTP.ID = OP.PLANO_TRATAMENTO_PROCEDIMENTO_ID
	
LEFT JOIN FATURA_ITEM_ORCAMENTO_ITEM FIOI
	ON FIOI.ORCAMENTO_ITEM_ID = OI.ID
LEFT JOIN FATURA_ITEM FI
	ON FI.ID = FIOI.FATURA_ITEM_ID
LEFT JOIN FATURA F
	ON F.ID = FI.FATURA_ID

WHERE O.APROVADO = 'S'
  AND O.ATIVO = 'S'
  AND OI.INCLUSO = 'S'
  AND PTP.FINALIZADO_POR IS NOT NULL;

CREATE VIEW REPASSE_MIGRACAO AS
SELECT DISTINCT
	P.DESCRICAO AS "PROC",
	PTP.ID AS "PTP_ID",
	F.ID AS "F_ID",
	FI.ID AS "FI_ID",
	CASE WHEN FI.VALOR_COM_DESCONTO IS NOT NULL
		THEN FI.VALOR_COM_DESCONTO
		ELSE FI.VALOR_ITEM
	END AS "FI_VALOR",
	PP.ID AS "PP_ID",
	COALESCE(SUM(RI_R.VALOR), 0) AS "VR",
	COALESCE(SUM(RI_L.VALOR), 0) + COALESCE(SUM(RI_P.VALOR), 0) AS "VP",
	RP.DATA AS "DATA",
	RP.DATA_PAGAMENTO AS "DATA_PAGTO",
	RP.ID_PROFISSIONAL AS "PROF_PAGTO_ID"
FROM PLANO_TRATAMENTO_PROCEDIMENTO PTP
LEFT JOIN PROCEDIMENTO P
	ON P.ID = PTP.ID_PROCEDIMENTO
LEFT JOIN PLANO_TRATAMENTO PT
	ON PT.ID = PTP.ID_PLANO_TRATAMENTO
LEFT JOIN ORCAMENTO_PROCEDIMENTO OP
	ON OP.PLANO_TRATAMENTO_PROCEDIMENTO_ID = PTP.ID
LEFT JOIN ORCAMENTO_ITEM OI
	ON OI.ID = OP.ORCAMENTO_ITEM_ID
LEFT JOIN FATURA_ITEM_ORCAMENTO_ITEM FIOI
	ON FIOI.ORCAMENTO_ITEM_ID = OI.ID
LEFT JOIN FATURA_ITEM FI
	ON FI.ID = FIOI.FATURA_ITEM_ID
LEFT JOIN FATURA F
	ON F.ID = FI.FATURA_ID

LEFT JOIN REPASSE_ITEM RI
	ON RI.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID
LEFT JOIN REPASSE_PROFISSIONAL RP
	ON RP.ID = RI.ID_REPASSE
LEFT JOIN REPASSE_ITEM RI_R
	ON RI_R.ID_REPASSE = RP.ID AND RI_R.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND RI_R.STATUS = 'R'
LEFT JOIN REPASSE_ITEM RI_P
	ON RI_P.ID_REPASSE = RP.ID AND RI_P.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND RI_P.STATUS = 'P'
LEFT JOIN REPASSE_ITEM RI_L
	ON RI_L.ID_REPASSE = RP.ID AND RI_L.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND RI_L.STATUS = 'L'

LEFT JOIN PROFISSIONAL PP
	ON PP.ID = RP.ID_PROFISSIONAL
WHERE RP.ID_PROFISSIONAL IS NOT NULL
GROUP BY PTP.ID, P.DESCRICAO, F.ID, FI.ID, PP.ID, RP.DATA, RP.DATA_PAGAMENTO, RP.ID_PROFISSIONAL
HAVING COALESCE(SUM(RI_R.VALOR), 0) > 0 OR COALESCE(SUM(RI_L.VALOR), 0) + COALESCE(SUM(RI_P.VALOR), 0) > 0
ORDER BY PTP.ID ASC;

---------------------------------MIGRACAO COM INSERT---------------------------------
INSERT INTO ORCAMENTO_ITEM(ATIVO, DESCRICAO, VALOR, VALOR_ORIGINAL, INCLUSO, ORCAMENTO_ID, PTP_ID)
(
	SELECT DISTINCT
		'S',
		PROC.DESCRICAO,
		(O.VALOR_TOTAL / (SELECT COUNT(*) FROM PLANO_TRATAMENTO_PROCEDIMENTO WHERE ID_PLANO_TRATAMENTO = PT.ID)),
		PTP.VALOR,
		'S',
		O.ID,
		PTP.ID
	FROM ORCAMENTO O
	LEFT JOIN PLANO_TRATAMENTO PT
		ON PT.ID = O.ID_PLANO_TRATAMENTO
	LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP
		ON PTP.ID_PLANO_TRATAMENTO = PT.ID
	LEFT JOIN PROCEDIMENTO PROC
		ON PROC.ID = PTP.ID_PROCEDIMENTO
	GROUP BY PROC.DESCRICAO, O.ID, PTP.ID, PT.ID
	HAVING COUNT(PTP.ID) > 0
);
UPDATE ORCAMENTO_ITEM
SET VALOR = VALOR + ((SELECT VALOR_TOTAL FROM ORCAMENTO WHERE ID = ORCAMENTO_ITEM.ORCAMENTO_ID) - (SELECT SUM(OS.VALOR) FROM ORCAMENTO_ITEM OS WHERE OS.ORCAMENTO_ID = ORCAMENTO_ITEM.ORCAMENTO_ID))
WHERE ID = (SELECT MAX(OSW.ID) FROM ORCAMENTO_ITEM OSW WHERE OSW.ORCAMENTO_ID = ORCAMENTO_ITEM.ORCAMENTO_ID);
INSERT INTO ORCAMENTO_PROCEDIMENTO(ORCAMENTO_ITEM_ID, PLANO_TRATAMENTO_PROCEDIMENTO_ID)
(
	SELECT
		OI.ID,
		OI.PTP_ID
	FROM ORCAMENTO_ITEM OI
);

WITH FATURA_INSERT AS (
	INSERT INTO FATURA(DATA_CRIACAO, ATIVO, PACIENTE_ID, ORCAMENTO_ID, TIPO_FATURA)
	SELECT
		CASE WHEN ORCAMENTO.DATA_APROVACAO IS NOT NULL
		THEN ORCAMENTO.DATA_APROVACAO
		ELSE CASE WHEN ORCAMENTO.DATA_CRIACAO IS NOT NULL
			 THEN ORCAMENTO.DATA_CRIACAO
			 ELSE CURRENT_TIMESTAMP END
		END,
		'S', CASE WHEN ORCAMENTO.PACIENTE_ID IS NOT NULL
			 THEN ORCAMENTO.PACIENTE_ID
			 ELSE PLANO_TRATAMENTO.ID_PACIENTE END,
		ORCAMENTO.ID,
		'RP'
	FROM ORCAMENTO
	LEFT JOIN PLANO_TRATAMENTO
		ON PLANO_TRATAMENTO.ID = ORCAMENTO.ID_PLANO_TRATAMENTO
	LEFT JOIN ORCAMENTO_ITEM OI
		ON OI.ORCAMENTO_ID = ORCAMENTO.ID
	WHERE ORCAMENTO.APROVADO = 'S'
	GROUP BY ORCAMENTO.DATA_APROVACAO, ORCAMENTO.DATA_CRIACAO,
			 ORCAMENTO.PACIENTE_ID, PLANO_TRATAMENTO.ID_PACIENTE,
			 ORCAMENTO.ID
	HAVING COUNT(OI.ID) > 0
	RETURNING *
)
INSERT INTO FATURA_ITEM(DESCRICAO_ITEM, VALOR_ITEM, VALOR_COM_DESCONTO, DATA_CRIACAO, TIPO_SALDO, ATIVO, FATURA_ID, ORCAMENTO_ITEM_ID)
SELECT
	OI.DESCRICAO,
	OI.VALOR,
	OI.VALOR,
	CASE WHEN O.DATA_APROVACAO IS NOT NULL
	THEN O.DATA_APROVACAO
	ELSE CASE WHEN O.DATA_CRIACAO IS NOT NULL
		 THEN O.DATA_CRIACAO
		 ELSE CURRENT_TIMESTAMP END
	END,
	'E', 'S', FAT.ID, OI.ID
FROM FATURA_INSERT FAT
LEFT JOIN ORCAMENTO O
	ON O.ID = FAT.ORCAMENTO_ID
LEFT JOIN ORCAMENTO_ITEM OI
	ON OI.ORCAMENTO_ID = O.ID
GROUP BY OI.VALOR, O.DATA_APROVACAO,
		 O.DATA_CRIACAO, FAT.ID, OI.ID
HAVING COUNT(OI.ID) > 0;
INSERT INTO FATURA_ITEM_ORCAMENTO_ITEM(FATURA_ITEM_ID, ORCAMENTO_ITEM_ID)
SELECT
	FI.ID,
	FI.ORCAMENTO_ITEM_ID
FROM FATURA_ITEM FI;

WITH FATURA_PP AS (
	INSERT INTO FATURA(DATA_CRIACAO, PROFISSIONAL_ID, ATIVO, TIPO_FATURA, FATURA_ORIGEM_ID)
	SELECT
		F.DATA_CRIACAO,
		P.ID,
		'S', 'PP',
		F.ID
	FROM (
		SELECT DISTINCT "F_ID", "PP_ID" FROM REPASSE_MIGRACAO
	) RM
	LEFT JOIN FATURA F ON F.ID = RM."F_ID"
	LEFT JOIN PROFISSIONAL P ON P.ID = RM."PP_ID"
	WHERE RM."F_ID" IS NOT NULL
	RETURNING *
), REPASSE_PP AS (
	INSERT INTO REPASSE_FATURAS(VALOR_CALCULO, FATURA_ORIGEM_ID, FATURA_REPASSE_ID, TIPO_CALCULO)
	SELECT
		COALESCE(
			CASE
				WHEN P.TIPO_REMUNERACAO = 'POR' THEN P.PERCENTUAL_REMUNERACAO
				ELSE P.REMUNERACAO_MANUTENCAO
			END, 0),
		F.FATURA_ORIGEM_ID,
		F.ID,
		P.TIPO_REMUNERACAO
	FROM FATURA_PP F
	LEFT JOIN PROFISSIONAL P
		ON P.ID = F.PROFISSIONAL_ID
	WHERE F.FATURA_ORIGEM_ID IS NOT NULL
	RETURNING *
), FATURA_ITEM_PP AS (
	INSERT INTO FATURA_ITEM(DESCRICAO_ITEM, VALOR_ITEM, DATA_CRIACAO, TIPO_SALDO, FATURA_ID, ATIVO, VALOR_COM_DESCONTO, FATURA_ITEM_ID, OBSERVACAO)
	SELECT DISTINCT
		CASE
			WHEN P.TIPO_REMUNERACAO = 'POR' THEN
				'Repasse de Profissional (' || LTRIM(TO_CHAR(
					CASE WHEN P.PERCENTUAL_REMUNERACAO IS NULL THEN 0::REAL
					ELSE P.PERCENTUAL_REMUNERACAO::REAL END, '999')) || '%) - ' || PROC.DESCRICAO
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN
				'Repasse de Profissional (Fixo: ' || REPLACE(LTRIM(TO_CHAR(
					CASE WHEN PROC.VALOR_REPASSE IS NULL THEN 0::REAL
					ELSE PROC.VALOR_REPASSE::REAL END, 'R$999D99')), '.', ',') || ') - ' || PROC.DESCRICAO
		END,
		COALESCE(CASE
			WHEN P.TIPO_REMUNERACAO = 'POR'
				THEN ROUND(CAST(
					(
						PTP.VALOR_DESCONTO -
						COALESCE((SELECT SUM(PTC.VALOR) FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND PTC.EXCLUIDO = 'N'), 0)
					) *
					(1 - (COALESCE(E.EMP_FLT_IMPOSTO, 0) / 100::FLOAT)) *
					(P.PERCENTUAL_REMUNERACAO / 100::FLOAT)
				 AS NUMERIC), 4)
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN PROC.VALOR_REPASSE
		END, 0),
		CURRENT_TIMESTAMP,
		'E',
		FREP.ID,
		'S',
		COALESCE(CASE
			WHEN P.TIPO_REMUNERACAO = 'POR'
				THEN ROUND(CAST(
					(
						PTP.VALOR_DESCONTO -
						COALESCE((SELECT SUM(PTC.VALOR) FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND PTC.EXCLUIDO = 'N'), 0)
					) *
					(1 - (COALESCE(E.EMP_FLT_IMPOSTO, 0) / 100::FLOAT)) *
					(P.PERCENTUAL_REMUNERACAO / 100::FLOAT)
				 AS NUMERIC), 4)
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN PROC.VALOR_REPASSE
		END, 0),
		FI.ID,
		'Repasse de profissional<br/>' ||
		'<b>Valor procedimento: ' ||
			REPLACE(
				LTRIM(
					TO_CHAR(
						PTP.VALOR_DESCONTO::REAL
					, 'R$999D99')
				)
			, '.', ',') || '</b><br/>' ||
		'Valor de custo direto subtraido: ' ||
			REPLACE(
				LTRIM(
					TO_CHAR(
						COALESCE(
							(SELECT SUM(PTC.VALOR)
							 FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC
							 WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID
							   AND PTC.EXCLUIDO = 'N')
						, 0)::REAL
					, 'R$999D99')
				)
			, '.', ',') || '<br/>' ||
		'DeduÃ§Ã£o de imposto: ' || REPLACE(LTRIM(TO_CHAR(E.EMP_FLT_IMPOSTO::REAL, '999D99%')), '.', ',')
	FROM REPASSE_MIGRACAO RM
	LEFT JOIN FATURA_PP FREP ON FREP.FATURA_ORIGEM_ID = RM."F_ID"
	LEFT JOIN REPASSE_PP RF ON RF.FATURA_REPASSE_ID = FREP.ID
	LEFT JOIN FATURA FORG ON FORG.ID = RF.FATURA_ORIGEM_ID
	LEFT JOIN FATURA_ITEM FI ON FI.FATURA_ID = FORG.ID
	LEFT JOIN PROFISSIONAL P ON P.ID = FREP.PROFISSIONAL_ID
	LEFT JOIN SEG_EMPRESA E ON E.EMP_INT_COD = P.ID_EMPRESA
	LEFT JOIN FATURA_ITEM_ORCAMENTO_ITEM FIOI ON FIOI.FATURA_ITEM_ID = FI.ID
	LEFT JOIN ORCAMENTO_ITEM OI ON OI.ID = FIOI.ORCAMENTO_ITEM_ID
	LEFT JOIN ORCAMENTO_PROCEDIMENTO OP ON OP.ORCAMENTO_ITEM_ID = OI.ID
	LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP ON PTP.ID = OP.PLANO_TRATAMENTO_PROCEDIMENTO_ID
	LEFT JOIN PROCEDIMENTO PROC ON PROC.ID = PTP.ID_PROCEDIMENTO
	LEFT JOIN REPASSE_ITEM RI ON RI.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID
	LEFT JOIN REPASSE_PROFISSIONAL RP ON RP.ID = RI.ID_REPASSE
	WHERE FREP.FATURA_ORIGEM_ID IS NOT NULL
	  AND RP.ID_PROFISSIONAL = P.ID
	RETURNING *
), REPASSE_ITEM_PP AS (
	INSERT INTO REPASSE_FATURAS_ITEM(FATURA_ITEM_ORIGEM_ID, FATURA_ITEM_REPASSE_ID, REPASSE_FATURAS_ID)
	SELECT
		FI.FATURA_ITEM_ID,
		FI.ID,
		RF.ID
	FROM FATURA_ITEM_PP FI
	LEFT JOIN FATURA_PP F
		ON F.ID = FI.FATURA_ID
	LEFT JOIN REPASSE_PP RF
		ON RF.FATURA_REPASSE_ID = F.ID
	RETURNING *
), FATURA_SEMORIGEM_PP AS (
	INSERT INTO FATURA(DATA_CRIACAO, PROFISSIONAL_ID, ATIVO, TIPO_FATURA, PTP_ORIGEM_ID)
	SELECT
		RM."DATA",
		P.ID,
		'S', 'PP',
		PTP.ID
	FROM (
		SELECT DISTINCT "PTP_ID", "F_ID", "PP_ID", "DATA" FROM REPASSE_MIGRACAO
	) RM
	LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP ON PTP.ID = RM."PTP_ID"
	LEFT JOIN PROFISSIONAL P ON P.ID = RM."PP_ID"
	WHERE RM."F_ID" IS NULL
	RETURNING *
), FATURA_ITEM_SEMORIGEM_PP AS (
	INSERT INTO FATURA_ITEM(DESCRICAO_ITEM, VALOR_ITEM, DATA_CRIACAO, TIPO_SALDO, FATURA_ID, ATIVO, VALOR_COM_DESCONTO, OBSERVACAO)
	SELECT
		CASE
			WHEN P.TIPO_REMUNERACAO = 'POR' THEN
				'Repasse de Profissional (' || LTRIM(TO_CHAR(
					CASE WHEN P.PERCENTUAL_REMUNERACAO IS NULL THEN 0::REAL
					ELSE P.PERCENTUAL_REMUNERACAO::REAL END, '999')) || '%) - ' || PROC.DESCRICAO
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN
				'Repasse de Profissional (Fixo: ' || REPLACE(LTRIM(TO_CHAR(
					CASE WHEN PROC.VALOR_REPASSE IS NULL THEN 0::REAL
					ELSE PROC.VALOR_REPASSE::REAL END, 'R$999D99')), '.', ',') || ') - ' || PROC.DESCRICAO
		END,
		COALESCE(CASE
			WHEN P.TIPO_REMUNERACAO = 'POR'
				THEN ROUND(CAST(
					(
						PTP.VALOR_DESCONTO -
						COALESCE((SELECT SUM(PTC.VALOR) FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND PTC.EXCLUIDO = 'N'), 0)
					) *
					(1 - (COALESCE(E.EMP_FLT_IMPOSTO, 0) / 100::FLOAT)) *
					(P.PERCENTUAL_REMUNERACAO / 100::FLOAT)
				 AS NUMERIC), 4)
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN PROC.VALOR_REPASSE
		END, 0),
		CURRENT_TIMESTAMP,
		'E',
		F.ID,
		'S',
		COALESCE(CASE
			WHEN P.TIPO_REMUNERACAO = 'POR'
				THEN ROUND(CAST(
					(
						PTP.VALOR_DESCONTO -
						COALESCE((SELECT SUM(PTC.VALOR) FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID AND PTC.EXCLUIDO = 'N'), 0)
					) *
					(1 - (COALESCE(E.EMP_FLT_IMPOSTO, 0) / 100::FLOAT)) *
					(P.PERCENTUAL_REMUNERACAO / 100::FLOAT)
				 AS NUMERIC), 4)
			WHEN P.TIPO_REMUNERACAO = 'PRO' THEN PROC.VALOR_REPASSE
		END, 0),
		'Repasse de profissional<br/>' ||
		'<b>Valor procedimento: ' ||
			REPLACE(
				LTRIM(
					TO_CHAR(
						PTP.VALOR_DESCONTO::REAL
					, 'R$999D99')
				)
			, '.', ',') || '</b><br/>' ||
		'Valor de custo direto subtraido: ' ||
			REPLACE(
				LTRIM(
					TO_CHAR(
						COALESCE(
							(SELECT SUM(PTC.VALOR)
							 FROM PLANO_TRATAMENTO_PROCEDIMENTO_CUSTO PTC
							 WHERE PTC.ID_PLANO_TRATAMENTO_PROCEDIMENTO = PTP.ID
							   AND PTC.EXCLUIDO = 'N')
						, 0)::REAL
					, 'R$999D99')
				)
			, '.', ',') || '<br/>' ||
		'DeduÃ§Ã£o de imposto: ' || REPLACE(LTRIM(TO_CHAR(E.EMP_FLT_IMPOSTO::REAL, '999D99%')), '.', ',')
	FROM FATURA_SEMORIGEM_PP F
	LEFT JOIN PROFISSIONAL P ON P.ID = F.PROFISSIONAL_ID
	LEFT JOIN SEG_EMPRESA E ON E.EMP_INT_COD = P.ID_EMPRESA
	LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP ON PTP.ID = F.PTP_ORIGEM_ID
	LEFT JOIN PROCEDIMENTO PROC ON PROC.ID = PTP.ID_PROCEDIMENTO
	WHERE F.PTP_ORIGEM_ID IS NOT NULL
	RETURNING *
), 	REPASSE_VALIDADO_PP AS (
	INSERT INTO LANCAMENTO(VALOR, DATA_CREDITO, FORMA_PAGAMENTO, DATA_PAGAMENTO, NUMERO_PARCELA,
						   ID_ORCAMENTO, ATIVO, DATA_ALTERACAO_STATUS, ALTERACAO_STATUS_ID, VALOR_ORIGINAL,
						   RECIBO, ID_PLANO_TRATAMENTO_PROCEDIMENTO, DATA_FATURAMENTO, VALOR_REPASSADO, TRIBUTO,
						   ID_TARIFA, VALIDADO, DATA_VALIDADO, VALIDADO_POR, FATURA_ID, DATA_CRIACAO)
	SELECT
		RM."VP", CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END, 'DI',
		CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END, 1,
		NULL, 'S', NULL, NULL, RM."VP", '', NULL, CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END,
		NULL, NULL, NULL, 'S', CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END, RM."PROF_PAGTO_ID",
		RF.FATURA_REPASSE_ID, CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END
	FROM REPASSE_MIGRACAO AS RM
	LEFT JOIN REPASSE_PP RF
		ON RF.FATURA_ORIGEM_ID = RM."F_ID"
	WHERE RM."VP" IS NOT NULL AND RM."VP" <> 0
	RETURNING *
), REPASSE_N_VALIDADO_PP AS (
	INSERT INTO LANCAMENTO(VALOR, DATA_CREDITO, FORMA_PAGAMENTO, DATA_PAGAMENTO, NUMERO_PARCELA,
						   ID_ORCAMENTO, ATIVO, DATA_ALTERACAO_STATUS, ALTERACAO_STATUS_ID, VALOR_ORIGINAL,
						   RECIBO, ID_PLANO_TRATAMENTO_PROCEDIMENTO, DATA_FATURAMENTO, VALOR_REPASSADO, TRIBUTO,
						   ID_TARIFA, VALIDADO, DATA_VALIDADO, VALIDADO_POR, FATURA_ID, DATA_CRIACAO)
	SELECT
		RM."VR", CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END, 'DI',
		CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END, 1,
		NULL, 'S', NULL, NULL, RM."VR", '', NULL, CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END,
		NULL, NULL, NULL, 'N', CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END,
		RM."PROF_PAGTO_ID", RF.FATURA_REPASSE_ID, CASE WHEN RM."DATA_PAGTO" IS NULL THEN RM."DATA" ELSE RM."DATA_PAGTO" END
	FROM REPASSE_MIGRACAO AS RM
	LEFT JOIN REPASSE_PP RF
		ON RF.FATURA_ORIGEM_ID = RM."F_ID"
	WHERE RM."VR" IS NOT NULL AND RM."VR" <> 0
	RETURNING *
)
INSERT INTO TRANSFERENCIA_CONTA(ID_CONTA_ORIGEM, ID_CONTA_DESTINO, DESCRICAO, DATA, VALOR, ID_PROFISSIONAL, ATIVO, LANCAMENTO_ID)
SELECT
	CONTA_E.ID,
	CONTA_P.ID,
	'MigraÃ§Ã£o de repasse de valores ao profissional',
	L.DATA_CRIACAO,
	L.VALOR,
	NULL,
	'S',
	L.ID
FROM REPASSE_VALIDADO_PP L
LEFT JOIN FATURA_PP FREP
	ON FREP.ID = L.FATURA_ID
LEFT JOIN PROFISSIONAL P
	ON P.ID = FREP.PROFISSIONAL_ID
LEFT JOIN CONTA CONTA_P
	ON CONTA_P.PROFISSIONAL_ID = P.ID
LEFT JOIN SEG_EMPRESA E
	ON E.EMP_INT_COD = P.ID_EMPRESA
LEFT JOIN CONTA CONTA_E
	ON CONTA_E.EMPRESA_ID = E.EMP_INT_COD;
INSERT INTO TRANSFERENCIA_CONTA(ID_CONTA_ORIGEM, ID_CONTA_DESTINO, DESCRICAO, DATA, VALOR, ID_PROFISSIONAL, ATIVO, LANCAMENTO_ID)
SELECT
	CONTA_E.ID,
	CONTA_P.ID,
	'MigraÃ§Ã£o de recebimentos de pacientes',
	L.DATA_CRIACAO,
	L.VALOR,
	NULL,
	'S',
	L.ID
FROM LANCAMENTO L
LEFT JOIN FATURA F
	ON F.ID = L.FATURA_ID
LEFT JOIN PACIENTE P
	ON P.ID = F.PACIENTE_ID
LEFT JOIN CONTA CONTA_P
	ON CONTA_P.PACIENTE_ID = P.ID
LEFT JOIN SEG_EMPRESA E
	ON E.EMP_INT_COD = P.ID_EMPRESA
LEFT JOIN CONTA CONTA_E
	ON CONTA_E.EMPRESA_ID = E.EMP_INT_COD
WHERE F.PACIENTE_ID IS NOT NULL;
INSERT INTO TRANSFERENCIA_CONTA_ORIGEM_LANCAMENTO(TRANSFERENCIA_CONTA_ID, LANCAMENTO_ID)
SELECT ID, LANCAMENTO_ID FROM TRANSFERENCIA_CONTA;

---------------------------------PÃ“S ALTER/UPDATE---------------------------------
--ALTER TABLE TRANSFERENCIA_CONTA DROP COLUMN LANCAMENTO_ID;
alter table PACIENTE ADD COLUMN INDICACAO_DOMINIO_ID BIGINT REFERENCES DOMINIO(ID);
alter table PACIENTE ADD COLUMN INDICACAO_PACIENTE_ID BIGINT REFERENCES PACIENTE(ID);
alter table PACIENTE ADD COLUMN INDICACAO_PROFISSIONAL_ID BIGINT REFERENCES PROFISSIONAL(ID);
ALTER TABLE PERGUNTA ALTER COLUMN requerida DROP DEFAULT;
ALTER TABLE PERGUNTA ALTER requerida TYPE bool USING CASE WHEN requerida='false' THEN FALSE ELSE TRUE END;
ALTER TABLE PERGUNTA ALTER COLUMN requerida set DEFAULT false;
ALTER TABLE SEG_EMPRESA ADD COLUMN AFILIACAO_ID BIGINT NULL REFERENCES AFILIACAO(ID);
ALTER TABLE TRANSFERENCIA_CONTA
   DROP CONSTRAINT transferencia_conta_id_conta_origem_fkey
 , ADD  CONSTRAINT transferencia_conta_id_conta_origem_fkey FOREIGN KEY(ID_CONTA_ORIGEM)
      REFERENCES CONTA(ID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE TRANSFERENCIA_CONTA
   DROP CONSTRAINT transferencia_conta_id_conta_destino_fkey
 , ADD  CONSTRAINT transferencia_conta_id_conta_destino_fkey FOREIGN KEY(ID_CONTA_DESTINO)
      REFERENCES CONTA(ID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SEG_EMPRESA ADD COLUMN VALIDAR_REPASSE_PROCEDIMENTO_FINALIZADO VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE SEG_EMPRESA ADD COLUMN VALIDAR_REPASSE_LANCAMENTO_ORIGEM_VALIDADO VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN DATA_CRIADO timestamp without time zone;
ALTER TABLE SEG_EMPRESA ADD COLUMN UTILIZA_RESERVA_KITS BOOLEAN default TRUE;
ALTER TABLE SEG_EMPRESA ADD COLUMN ADICIONAR_LOGO_ORCAMENTO VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE plano_tratamento RENAME finalizado TO status;
ALTER TABLE ORCAMENTO ADD COLUMN DESCRICAO VARCHAR(200);
ALTER TABLE ORCAMENTO ADD COLUMN OBSERVACOES VARCHAR(1000);
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN DENTISTA_EXECUTOR_ID BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE CONVENIO ADD COLUMN observacao_convenio character varying(255);
ALTER TABLE FATURA ADD COLUMN PROFISSIONAL_CRIACAO_ID BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE REPASSE_FATURAS ADD COLUMN VALOR_CALCULO_MANUTENCAO NUMERIC(5, 2) NULL;
ALTER TABLE LANCAMENTO ADD COLUMN PAGAMENTO_CONFERIDO VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE LANCAMENTO ADD COLUMN CONFERIDO_POR BIGINT NULL REFERENCES PROFISSIONAL(ID);
ALTER TABLE LANCAMENTO ADD COLUMN DATA_CONFERIDO TIMESTAMP(10) NULL;
ALTER TABLE FATURA_ITEM ADD COLUMN OBSERVACAO TEXT NULL;
ALTER TABLE SEG_EMPRESA ADD COLUMN VALIDAR_REPASSE_CONFERE_CUSTO_DIRETO VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE SEG_EMPRESA ADD COLUMN REPASSE_ADICIONA_TRIBUTOS VARCHAR(1) NOT NULL DEFAULT 'S';
ALTER TABLE REPASSE_FATURAS ADD COLUMN SUBTRAI_IMPOSTO_REPASSE VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE REPASSE_FATURAS ADD COLUMN VALOR_IMPOSTO NUMERIC(11, 2) NULL;
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN CUSTO_DIRETO_VALIDO VARCHAR(1) NOT NULL DEFAULT 'N';
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN DATA_CUSTO_DIRETO_VALIDADO TIMESTAMP(10) NULL;
ALTER TABLE PLANO_TRATAMENTO_PROCEDIMENTO ADD COLUMN CUSTO_DIRETO_VALIDADO_POR BIGINT REFERENCES PROFISSIONAL(ID) NULL;

ALTER TABLE fatura ADD COLUMN fornecedor_id bigint REFERENCES FORNECEDOR(ID);
ALTER TABLE conta ADD COLUMN fornecedor_id bigint REFERENCES FORNECEDOR(ID);
ALTER TABLE fatura ADD COLUMN origem_id bigint REFERENCES ORIGEM(ID);
ALTER TABLE conta ADD COLUMN origem_id bigint REFERENCES ORIGEM(ID);
ALTER TABLE fatura ADD COLUMN id_empresa bigint REFERENCES SEG_EMPRESA(EMP_INT_COD);

---------------------------------COMANDOS PÃ“S MIGRAÃ‡ÃƒO---------------------------------
--ALTER TABLE LANCAMENTO ALTER COLUMN FATURA_ID SET NOT NULL;
UPDATE SEG_OBJETO SET OBJ_STR_CAMINHO = 'faturaPagto.jsf' WHERE OBJ_STR_DES = 'Recebimento dos Pacientes';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Plano de Tratamento' WHERE OBJ_STR_DES = 'Rel. Plano Tratamento';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'Fila de Atendimento' WHERE OBJ_STR_DES = 'Rel. Atendimento';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Atendimento' WHERE OBJ_STR_DES = 'Rel. de Atendimento';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de AvaliaÃ§Ã£o do Atendimento' WHERE OBJ_STR_DES = 'Rel AvaliaÃ§Ã£o Atend.';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'Repasse dos Profissionais';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'Repasse dos Profissionais' WHERE OBJ_STR_DES = 'Repasse Profissional';
UPDATE LANCAMENTO SET FATURA_ID = (
	SELECT F.ID
	FROM LANCAMENTO L
	LEFT JOIN ORCAMENTO O
		ON O.ID = L.ID_ORCAMENTO
	LEFT JOIN FATURA F
		ON F.ORCAMENTO_ID = O.ID
	WHERE L.ID = LANCAMENTO.ID
);
UPDATE PACIENTE SET INDICACAO_DOMINIO_ID = (SELECT ID FROM dominio WHERE TIPO = 'indicacao' AND nome = 'Outros') WHERE INDICACAO IS NOT NULL AND INDICACAO <> '';
UPDATE PLANO_TRATAMENTO SET ID_ODONTOGRAMA = (
	SELECT
		CASE WHEN UP."ODONTOGRAMA" IS NOT NULL
			THEN UP."ODONTOGRAMA"
		ELSE (
			SELECT ODO.ID
			FROM PLANO_TRATAMENTO PT
			LEFT JOIN PLANO_TRATAMENTO_PROCEDIMENTO PTP ON PTP.ID_PLANO_TRATAMENTO = PT.ID
			LEFT JOIN DENTE D ON D.ID = PTP.ID_DENTE
			LEFT JOIN ODONTOGRAMA ODO ON ODO.ID = D.ID_ODONTOGRAMA
			WHERE PT.ID = UP."PT"
			ORDER BY PTP.ID DESC, D.ID DESC, ODO.ID DESC
			LIMIT 1
		) END
	FROM (
		SELECT DISTINCT PT.ID AS "PT", (
			SELECT O.ID FROM ODONTOGRAMA O
			WHERE O.DATA_CADASTRO < PT.DATA_HORA
			  AND O.ID_PACIENTE = PT.ID_PACIENTE
			ORDER BY ID DESC LIMIT 1
		) AS "ODONTOGRAMA" FROM PLANO_TRATAMENTO PT
	) AS UP
	WHERE UP."PT" = PLANO_TRATAMENTO.ID
) WHERE ID IN (
	SELECT ID FROM PLANO_TRATAMENTO WHERE ID_ODONTOGRAMA IS NULL
);
update ESPECIALIDADE set descricao = 'GENERICAS' where descricao ilike 'GEN%';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Estoque Antigo' WHERE OBJ_STR_DES = 'RelatÃ³rio de Estoque';
UPDATE SEG_OBJETO SET OBJ_STR_DES = 'RelatÃ³rio de Estoque' WHERE OBJ_STR_DES = 'Estoque MÃ­nimo';
UPDATE SEG_OBJETO SET OBJ_CHA_STS = 'I' WHERE OBJ_STR_DES = 'RelatÃ³rio de Estoque Antigo';
update plano_tratamento set status = 'E' where status = 'S' and justificativa is NULL;
UPDATE seg_objeto SET obj_int_ordem = 2 WHERE obj_str_des = 'Agenda';
UPDATE seg_objeto SET obj_int_ordem = 3 WHERE obj_str_des = 'Fila de Atendimento';
UPDATE seg_objeto SET obj_int_ordem = 4 WHERE obj_str_des = 'Retorno';
UPDATE seg_objeto SET obj_cha_sts = 'I' WHERE obj_str_des = 'Dashboard';
UPDATE seg_objeto SET obj_str_des = 'Consumo' WHERE obj_str_des = 'EmprÃ©stimo de Materiais';
UPDATE seg_objeto SET obj_cha_sts = 'I' WHERE obj_str_des = 'DevoluÃ§Ã£o de Materiais';
UPDATE seg_objeto SET obj_int_ordem = 3 WHERE obj_str_des = 'EmprÃ©stimo UnitÃ¡rio';
UPDATE seg_objeto SET obj_int_ordem = 1 WHERE obj_str_des = 'EmprÃ©stimo de Kits';
UPDATE seg_objeto SET obj_int_codpai = 36, obj_int_ordem = 2 WHERE obj_str_des = 'DevoluÃ§Ã£o de Kits';
UPDATE seg_objeto SET obj_int_codpai = 36, obj_int_ordem = 4 WHERE obj_str_des = 'DevoluÃ§Ã£o UnitÃ¡ria';
UPDATE seg_objeto SET obj_int_ordem = 5 WHERE obj_str_des = 'Ajuste de Estoque';
UPDATE seg_objeto SET obj_int_ordem = 7 WHERE obj_str_des = 'MovimentaÃ§Ã£o de Materiais';
UPDATE seg_objeto SET obj_int_ordem = 6 WHERE obj_str_des = 'Cadastros';

UPDATE DOMINIO SET EXCLUIDO = 'S', DATA_EXCLUSAO = CURRENT_DATE
WHERE ID IN (
	SELECT
		D.ID
	FROM DOMINIO D
	WHERE D.OBJETO = 'planotratamento'
	  AND D.TIPO = 'justificativa'
	  AND D.EXCLUIDO = 'N'
	 ORDER BY D.NOME
);
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamento', 'justificativa', 'Cadastro de plano de tratamento errado', 'CE', 41, TRUE, 'N');
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamento', 'justificativa', 'Paciente desistiu do tratamento', 'PD', 41, TRUE, 'N');
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamento', 'justificativa', 'Paciente optou por outro plano de tratamento', 'OT', 41, TRUE, 'N');
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamento', 'justificativa', 'Plano de tratamento foi alterado', 'PA', 41, TRUE, 'N');

UPDATE DOMINIO SET EXCLUIDO = 'S', DATA_EXCLUSAO = CURRENT_DATE
WHERE ID IN (
	SELECT
		D.ID
	FROM DOMINIO D
	WHERE D.OBJETO = 'planotratamentoprocedimento'
	  AND D.TIPO = 'justificativa'
	  AND D.EXCLUIDO = 'N'
	 ORDER BY D.NOME
);
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamentoprocedimento', 'justificativa', 'Cadastro de procedimento errado', 'PE', 41, TRUE, 'N');
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamentoprocedimento', 'justificativa', 'SolicitaÃ§Ã£o do dentista', 'SD', 41, TRUE, 'N');
INSERT INTO DOMINIO(OBJETO, TIPO, NOME, VALOR, ID_EMPRESA, EDITAVEL, EXCLUIDO)
VALUES('planotratamentoprocedimento', 'justificativa', 'SolicitaÃ§Ã£o do paciente', 'SP', 41, TRUE, 'N');

insert into local (descricao, tipo, id_empresa, excluido) values ('EM LAVAGEM','EM',41,'N');
insert into local (descricao, tipo, id_empresa, excluido) values ('EM ESTERILIZACAO','EM',41,'N');
insert into local (descricao, tipo, id_empresa, excluido) values ('EMPRESTADO KIT','EM',41,'N');
insert into local (descricao, tipo, id_empresa, excluido) values ('EMPRESTADO UNITARIO','EM',41,'N');
insert into local (descricao, tipo, id_empresa, excluido) values ('DESCARTE','DE',41,'N');
insert into local (descricao, tipo, id_empresa, excluido) values ('AJUSTE','AJ',41,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Indicado por Paciente','0',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Indicado por Profissional','1',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Google','2',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Facebook','3',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Instagram','4',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Propaganda','5',0,false,'N');
insert into dominio (objeto,tipo,nome,valor,id_empresa,editavel,excluido) values ('indicacao','indicacao','Outros','6',0,false,'N');
INSERT INTO AFILIACAO(NOME, ATIVO) VALUES('Grupo QS - Qualidade e SaÃºde', 'S');
INSERT INTO AFILIACAO(NOME, ATIVO) VALUES('ConsultÃ³rio Legal', 'S');
insert into seg_perobjeto (per_int_cod,obj_int_cod)  
 select per_int_cod,149 from seg_perobjeto where obj_int_cod = 90;
insert into objeto_profissional (obj_int_cod,id_profissional) 
  select 149,id_profissional from objeto_profissional where obj_int_cod = 90;
INSERT INTO objeto_profissional (obj_int_cod,id_profissional) 
SELECT 166,id_profissional FROM objeto_profissional WHERE obj_int_cod = 149;
INSERT INTO seg_objeto (obj_int_cod, obj_int_codpai, obj_str_des, obj_cha_sts, obj_str_caminho,sis_int_cod, obj_int_ordem, obj_cha_tipo, obj_str_icon)
values (170, 11, 'Pagamentos e Recebimentos', 'A', 'pagamentoRecebimentoFatura.jsf',123, 6, 'T', null);
INSERT INTO objeto_profissional (obj_int_cod,id_profissional) 
SELECT 170,id_profissional FROM objeto_profissional WHERE obj_int_cod = 149;

---------------------------------CREATE FUNCTIONS---------------------------------