<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="/WEB-INF/template.xhtml"
	xmlns:pe="http://primefaces.org/ui/extensions">
	<ui:define name="content">
		<style>
.labelInlineParent {
	padding-top: 0px !important;
	padding-bottom: 20px !important;
}

.labelInline label {
	display: inline !important;
}

.ui-dialog {
	overflow: auto !important;
}

.ui-picklist .ui-picklist-list {
	height: 100px;
}

.fc-time-grid-container {
	height: auto !important;
}

.ui-growl {
	z-index: 999999 !important;
}

div.ui-selectoneradio label {
	width: auto !important;
}

.fc-time-grid-event>.fc-content {
	text-align: left !important;
}

.fc-toolbar {
	padding: 0 !important;
}

.fc .fc-left, .fc .fc-left .fc-button-group, .fc .fc-right .fc-button-group
	{
	display: inline-flex !important;
}

.fc .fc-right .fc-button-group button {
	width: 100px !important;
}

.filtroFirst .ui-panelgrid-cell {
	padding: 0px !important;
}

.filtroFirst .ui-panelgrid-cell:first-child {
	padding-right: 7px !important;
}

.filtroFirst .ui-panelgrid-cell:last-child {
	padding-left: 7px !important;
}

.removeSecondPadding>.ui-panelgrid-content .ui-grid-row .ui-panelgrid-cell:nth-child(1)
	{
	padding-top: 0px !important;
}

.ui-selectmanycheckbox tr td {
	position: relative;
	display: inline-flex !important;
	width: 238px !important
}

.ui-selectmanycheckbox tr td>div>div:last-child {
	display: inline-block;
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

.ui-selectmanycheckbox tr td label {
	position: relative;
	display: inline-flex !important;
}

.ui-selectmanycheckbox tr td label div:first-child {
	position: relative;
}

.ui-selectmanycheckbox tr td label div:first-child div {
	display: inline-block;
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

.NoChildPadding>div {
	padding: 0px !important;
}

.ui-fluid .ui-buttonset.ui-buttonset-3 .ui-button {
	width: 33.3% !important;
}

.ggl-tooltip {
  background-color: #ffffff;
  border: 1px solid #e0e0e0;
  font-family: Arial, Helvetica;
  font-size: 14px;
  padding: 8px;
}

.ggl-tooltip span {
  font-weight: bold;
}

.chartCadeiras > div, .chartProfissionais > div {
	max-width: 100%;
	overflow: auto;
	overflow-y: hidden;
}

.ui-picklist.ui-picklist-responsive .ui-picklist-list-wrapper:nth-child(1) {
	width: calc(50% - 30px) !important;
}
</style>
		<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
		<script>
			google.charts.load("current", {packages:['corechart','timeline']});
		
			function resize(dialog) {
				//'#lume\\:pnAgendamento'
				$(window).resize(function() {
					$(dialog).css({
						'width' : $(window).width(),
						'height' : $(window).height(),
						'left' : '0px',
						'top' : '0px'
					});
				}).resize();
			}
		</script>


		<p:dialog id="dlgGoogleAgenda" widgetVar="dlgGoogleAgenda"
			header="Google Agenda" responsive="true" modal="true"
			appendToBody="true">
			<ui:include src="exportarAgenda.xhtml" />
		</p:dialog>

		<h:panelGroup id="pnBloqueio">
			<p:dialog id="dlgBloqueio" widgetVar="dlgBloqueio"
				header="Bloqueio de Agenda" responsive="true" modal="true"
				appendToBody="true">
				<ui:include src="afastamento.xhtml" />
			</p:dialog>
		</h:panelGroup>

		<p:dialog widgetVar="eventDialog" header="Agendamento"
			resizable="false" responsive="true" width="calc(100% - 2px)"
			height="100%" position="0,0" modal="true"
			style="position:absolute !important;" appendToBody="true"
			focus="paciente">

			<p:ajax event="close" listener="#{agendamentoMB.handleClose}"
				update=":lume:pnAgendamento, :lume:profissional, btBloqueioAgenda"
				oncomplete="PF('myschedule').update();" />


			<div class="Container100 Responsive100 NoIndent">
				<div class="Container100 ui-fluid NoPadding">
					<div class="Card" style="margin-top: -35px">

						<p:outputPanel id="pnAgendamento">


							<ui:include src="dlgagendamento.xhtml" />

							<p:separator styleClass="SeparatorFull" />

							<p:panelGrid columns="4" layout="grid"
								styleClass="ui-panelgrid-blank form-group ui-fluid"
								id="botoesAgenda">
								<p:commandButton id="persist" icon="White fa fa-save"
									process="pnAgendamento" value="Salvar"
									rendered="#{agendamentoMB.habilitaSalvar}"
									actionListener="#{agendamentoMB.actionPersist}"
									update=":lume:pnAgendamento, :lume:profissional, btBloqueioAgenda"
									oncomplete="PF('myschedule').update();handleDialogRequest(xhr, status, args);"
									styleClass="GreenButton" />
								<p:button id="whats" icon="White fa fa-whatsapp"
									onclick="window.open('#{agendamentoMB.entity.whatsURL}');return false;"
									value="Enviar Whatsapp" styleClass="GreenButton"
									disable="#{agendamentoMB.entity.whatsURL == null}"
									rendered="#{agendamentoMB.entity != null and agendamentoMB.entity.id > 0}" />
								<p:commandButton icon="White fa fa-close" value="Fechar"
									process="@this" onclick="PF('eventDialog').hide()"
									actionListener="#{agendamentoMB.handleClose}"
									update=":lume:pnAgendamento, :lume:profissional, btBloqueioAgenda"
									oncomplete="PF('myschedule').update();" />
								<p:commandButton id="confirmarPreCadastro"
									icon="White fa fa-save" process="pnAgendamento"
									value="Confirmar PrÃ© Agendamento"
									update="pnAgendamento, btBloqueioAgenda"
									oncomplete="PF('myschedule').update();"
									actionListener="#{agendamentoMB.actionConfirmarPreCadastro}"
									rendered="#{agendamentoMB.entity.statusNovo == 'P'}" />
							</p:panelGrid>
						</p:outputPanel>
					</div>
				</div>
			</div>
		</p:dialog>

		<p:poll interval="60" oncomplete="PF('myschedule').update();"
			id="poll" immediate="true" async="true" global="false"
			process="@this" />

		<div class="ui-g ui-fluid">
			<div class="ui-g-12 ui-lg-12">
				<div class="card card-w-title">
					<h1 style="margin-bottom: 5px">Agendamento</h1>
					<br />
					<p:panel id="pnAgnd" styleClass="NoChildPadding"
								style="margin: 0 auto; margin-bottom: 10px;border: none">
						<p:fieldset id="filtrosShow"
							legend="#{agendamentoMB.dentista ? 'Legenda' : 'Filtro'}"
							toggleable="true" toggleSpeed="500"
							collapsed="#{agendamentoMB.profissional == null and agendamentoMB.pacientePesquisado == null}">
							<p:panelGrid columns="1" layout="grid"
								styleClass="ui-panelgrid-blank ui-fluid form-group removeSecondPadding"
								style="border:0px none; background-color:transparent;">
								<p:outputPanel rendered="#{agendamentoMB.visualizacao == 'S'}">
									<p:panelGrid columns="2" layout="grid"
										styleClass="ui-panelgrid-blank ui-fluid form-group filtroFirst"
										style="border:0px none; background-color:transparent;"
										rendered="#{!agendamentoMB.dentista}">
										<h:panelGroup styleClass="md-combo">
											<p:outputLabel for="pacienteSelecionado" value="Paciente" />
											<p:selectOneMenu id="pacienteSelecionado"
												value="#{agendamentoMB.pacientePesquisado}" converter="paciente"
												filter="true" filterMatchMode="contains"
												style="margin-top:10px;margin-bottom:10px">
												<f:selectItem itemValue="#{null}" itemLabel="Todos" />
												<f:selectItems value="#{agendamentoMB.pacientes}"
													var="p"
													itemLabel="#{p.dadosBasico.nome}"
													itemValue="#{p}" />
													<p:ajax listener="#{agendamentoMB.limpaPacienteSelecionado}"
													oncomplete="atualizaGraficos();" process="@this"
													update="pacienteSelecionado,:lume:pnAgnd,:lume:schedule" />													
											</p:selectOneMenu>						
											<p:message for="pacienteSelecionado" styleClass="msg" />
										</h:panelGroup>
										<h:panelGroup styleClass="md-inputfield">
											<p:calendar id="initialDate" required="false"
												value="#{agendamentoMB.initialDate}" pattern="dd/MM/yyyy"
												mask="true" showWeeksBar="false"
												locale="#{lumeSecurity.locale}"
												timeZone="#{lumeSecurity.timeZone}" navigator="true"
												yearRange="-100:+10"
												style="margin-top:10px;margin-bottom:10px;display: inline-block;">
												<p:ajax event="dateSelect" update=":lume:schedule"
													oncomplete="atualizaGraficos();" process="@this" />
											</p:calendar>
											<p:outputLabel for="initialDate" value="Data" />
											<p:message for="initialDate" styleClass="msg" />
										</h:panelGroup>
									</p:panelGrid>
									<h:panelGroup styleClass="md-inputfield"
										rendered="#{agendamentoMB.dentista}">
										<p:calendar id="initialDateSolo" required="false"
											value="#{agendamentoMB.initialDate}" pattern="dd/MM/yyyy"
											mask="true" showWeeksBar="false"
											locale="#{lumeSecurity.locale}"
											timeZone="#{lumeSecurity.timeZone}" navigator="true"
											yearRange="-100:+10"
											style="margin-top:10px;margin-bottom:10px;display: inline-block;">
											<p:ajax event="dateSelect" update=":lume:schedule"
												oncomplete="atualizaGraficos();" process="@this" />
										</p:calendar>
										<p:outputLabel for="initialDateSolo" value="Data" />
										<p:message for="initialDateSolo" styleClass="msg" />
									</h:panelGroup>
									<h:panelGroup styleClass="md-combo"
										rendered="#{!agendamentoMB.dentista}">
										<p:outputLabel for="profissional" value="Profissional" />
										<p:selectOneMenu id="profissional"
											value="#{agendamentoMB.profissional}" converter="profissional"
											filter="true" filterMatchMode="contains"
											style="margin-top:10px;margin-bottom:10px">
											<f:selectItem itemValue="#{null}" itemLabel="Todos" />
											<f:selectItems value="#{agendamentoMB.profissionais}"
												var="profissional"
												itemLabel="#{profissional.dadosBasico.prefixoNome}"
												itemValue="#{profissional}" />
											<p:ajax listener="#{agendamentoMB.limpaPacienteSelecionado}"
												oncomplete="atualizaGraficos();" process="@this"
												update="pacienteSelecionado,:lume:pnAgnd,:lume:schedule" />
										</p:selectOneMenu>
									</h:panelGroup>
									<p:outputLabel value="Disponibilidade : "
										rendered="#{agendamentoMB.horasUteisProfissional != null}" />
									<p:dataTable filterDelay="1500" reflow="true" emptyMessage=""
										id="dtHorasUteisPrincipal"
										value="#{agendamentoMB.horasUteisProfissional}" var="hup"
										rowKey="#{hup}"
										rendered="#{agendamentoMB.horasUteisProfissional != null}"
										style="margin-top:10px;margin-bottom:10px">
	
										<p:column headerText="Dia">
											<h:outputText value="#{hup.diaDaSemana}" />
										</p:column>
										<p:column headerText="Hora Inicial">
											<h:outputText value="#{hup.horaIniStr}" />
										</p:column>
										<p:column headerText="Hora Final">
											<h:outputText value="#{hup.horaFimStr}" />
										</p:column>
									</p:dataTable>
								</p:outputPanel>
								<p:outputPanel rendered="#{agendamentoMB.visualizacao != 'S'}">
									<h:panelGroup styleClass="md-inputfield">
										<p:calendar id="initialDateSolo1" required="false"
											value="#{agendamentoMB.initialDate}" pattern="dd/MM/yyyy"
											mask="true" showWeeksBar="false"
											locale="#{lumeSecurity.locale}"
											timeZone="#{lumeSecurity.timeZone}" navigator="true"
											yearRange="-100:+10"
											style="margin-top:10px;margin-bottom:10px;display: inline-block;">
											<p:ajax event="dateSelect" process="@this" update=":lume:schedule"
												oncomplete="atualizaGraficos();" />
										</p:calendar>
										<p:outputLabel for="initialDateSolo1" value="Data" />
									</h:panelGroup>
								</p:outputPanel>
								<p:outputPanel>
									<h:outputLabel value="Mostrar os agendamentos : " />
									<p:selectManyCheckbox value="#{agendamentoMB.filtroAgendamento}"
										layout="grid" columns="4">
										<p:ajax process="@this" update=":lume:schedule"
											oncomplete="atualizaGraficos();" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoAfastamento legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Bloqueio&lt;/div&gt;"
											itemValue="F" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoAtendido legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Atendidos&lt;/div&gt;"
											itemValue="A" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoConsultaInicial legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Consulta Inicial&lt;/div&gt;"
											itemValue="G" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoCancelado legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Cancelados&lt;/div&gt;"
											itemValue="C" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoErroAgendamento legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Erro de Agendamento&lt;/div&gt;"
											itemValue="D" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='clienteNaClinica legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Cliente na ClÃ­nica&lt;/div&gt;"
											itemValue="I" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoConfirmado legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Confirmados&lt;/div&gt;"
											itemValue="S" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='emAtendimento legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Em Atendimento&lt;/div&gt;"
											itemValue="O" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoEncaixe legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Encaixe&lt;/div&gt;"
											itemValue="E" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoEncaixeAtendido legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Encaixe Atendido&lt;/div&gt;"
											itemValue="H" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoFalta legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Falta&lt;/div&gt;"
											itemValue="B" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoNaoConfirmado legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;NÃ£o Confirmado&lt;/div&gt;"
											itemValue="N" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoPrecadastro legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Agendado pelo Paciente&lt;/div&gt;"
											itemValue="P" itemEscaped="false" />
										<f:selectItem
											itemLabel="&lt;div&gt;&lt;div class='agendamentoRemarcado legendaFiltroAgendamento'&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Remarcado&lt;/div&gt;"
											itemValue="R" itemEscaped="false" />
									</p:selectManyCheckbox>
								</p:outputPanel>
							</p:panelGrid>
							<p:outputPanel rendered="#{agendamentoMB.visualizacao == 'S'}">
								<p:panelGrid columns="3" layout="grid"
									styleClass="ui-panelgrid-blank form-group ui-fluid">
									<p:commandButton value="Imprimir" type="button"
										onclick="printSchedule()" icon="White fa fa-print"
										styleClass="NavyButton">
									</p:commandButton>
									<p:commandButton id="btBloqueioAgenda" value="Bloqueio de Agenda"
										icon="White fa fa-calendar White" styleClass="RedButton"
										onclick="resize('#lume\\:dlgBloqueio');PF('dlgBloqueio').show();"
										disabled="#{agendamentoMB.profissional == null}"
										update=":lume:dtAfastamento" />
									<p:commandButton value="Exportar para Google Agenda"
										type="button" icon="White fa fa-google White"
										onclick="handleClientLoad();resize('#lume\\:dlgGoogleAgenda');PF('dlgGoogleAgenda').show();" />
								</p:panelGrid>
							</p:outputPanel>
							<p:outputPanel rendered="#{agendamentoMB.visualizacao != 'S'}">
								<p:panelGrid columns="1" layout="grid"
									styleClass="ui-panelgrid-blank form-group ui-fluid">
									<p:commandButton value="Imprimir" type="button" onclick="printTimeline();"
										icon="White fa fa-print" styleClass="NavyButton">
									</p:commandButton>
								</p:panelGrid>
							</p:outputPanel>
						</p:fieldset>
					</p:panel>
					<p:selectOneButton value="#{agendamentoMB.visualizacao}" id="selectVisualizacao" unselectable="false">
						<f:selectItem itemLabel="CalendÃ¡rio" itemValue="S" />
						<f:selectItem itemLabel="Ag/Cadeira" itemValue="C" />
						<f:selectItem itemLabel="Ag/Profissional" itemValue="P" />
						<p:ajax update=":lume:agendamentoVisualizacao, :lume:filtrosShow,:lume:schedule"
							oncomplete="atualizaGraficos();" process=":lume:selectVisualizacao" />
					</p:selectOneButton>
					<p:separator styleClass="SeparatorFull" />
					<p:outputPanel id="agendamentoVisualizacao">
						<p:outputPanel rendered="#{agendamentoMB.visualizacao == 'S'}">
							<p:schedule id="schedule" value="#{agendamentoMB.schedule}"
								axisFormat="HH:mm" slotEventOverlap="false"
								style="width:100%;heigth:100%;margin: 0 auto;display: inline-block;"
								slotMinutes="15" widgetVar="myschedule" locale="pt"
								timeZone="#{lumeSecurity.timeZone}" firstHour="8"
								view="agendaDay" timeFormat="HH:mm" minTime="07:00"
								maxTime="21:00" allDaySlot="false" draggable="false"
								resizable="false" initialDate="#{agendamentoMB.initialDate}">
								<p:ajax event="dateSelect"
									update=":lume:pnAgendamento,:lume:botoesAgenda"
									listener="#{agendamentoMB.onDateSelect}"
									oncomplete="handleDialogRequest(xhr, status, args);"
									resetValues="true" />
								<p:ajax event="eventSelect"
									update=":lume:pnAgendamento,:lume:botoesAgenda"
									listener="#{agendamentoMB.onEventSelect}"
									oncomplete="handleDialogRequest(xhr, status, args);" />
							</p:schedule>
						</p:outputPanel>
						<p:outputPanel rendered="#{agendamentoMB.visualizacao == 'C'}">
							<div id="chartCadeiras"  class="chartCadeiras"></div>
						</p:outputPanel>
						<p:outputPanel rendered="#{agendamentoMB.visualizacao == 'P'}">
							<div id="chartAtendimentos" class="chartProfissionais"></div>
						</p:outputPanel>
					</p:outputPanel>
					<p:remoteCommand name="updateVisualizacao" update=":lume:agendamentoVisualizacao" />
					<p:remoteCommand name="loadProfissionaisChart" actionListener="#{agendamentoMB.loadChartProfissionais()}" immediate="true" />
					<p:remoteCommand name="loadCadeirasChart" actionListener="#{agendamentoMB.loadChartCadeiras()}" immediate="true" />
				</div>
			</div>
		</div>

		<script type="text/javascript">		
			//<![CDATA[		
			String.prototype.replaceAll = String.prototype.replaceAll || function(needle, replacement) {
			    return this.split(needle).join(replacement);
			};
			function getRuleFromSelectorIncludes(selector) {
				var lumeCss = document.styleSheets[13];
                var rules = lumeCss.cssRules? lumeCss.cssRules : lumeCss.rules;
                for (i = 0; i < rules.length; i++) {
					if(rules[i].selectorText.includes("." + selector)) {
                		return rules[i];
                	}
                }
                return null;
			}
			function montaTimeline(backendValue, indexPrincipal, containerName) {
				var tamanho = new Array(backendValue.dados);
				if(tamanho[0][0] != '') {
                	var container = document.getElementById(containerName);
                    var chart = new google.visualization.Timeline(container);
                    var dataTable = new google.visualization.DataTable();
                    dataTable.addColumn({ type: 'string', id: 'Profissional' });
                    dataTable.addColumn({ type: 'string', id: 'Status' });
                    dataTable.addColumn({ type: 'string', id: 'Paciente' });
                    dataTable.addColumn({ type: 'date', id: 'Inicio' });
                    dataTable.addColumn({ type: 'date', id: 'Fim' });
                    dataTable.addColumn({ type: 'string', id: 'Cadeira' });
                    dataTable.addColumn({ type: 'string', id: 'Telefone' });
                    dataTable.addRows(backendValue.dados);
                     
                    var colors = [];
                    var colorMap = backendValue.classes;
                    for (var i = 0; i < dataTable.getNumberOfRows(); i++) {
                    	var rule = getRuleFromSelectorIncludes(colorMap[dataTable.getValue(i, 1)]);
                        colors.push(rule.style.backgroundColor);
                    }
                    
                    var rowHeight = 41;
                    var chartHeight = (dataTable.getNumberOfRows() + 1) * rowHeight;
					
					var options = {
						timeline: { 
							groupByRowLabel: true,
							rowLabelStyle: {
								fontSize: 14,
								color: '#333333'
							},
						},
						tooltip: {isHtml: true},
						avoidOverlappingGridLines: true,
						height: chartHeight,
						width: "100%",
						colors: colors
					};
					
					var formatTime = new google.visualization.DateFormat({
						pattern: 'HH:mm'
					});
					
					var view = new google.visualization.DataView(dataTable);
					view.setColumns([indexPrincipal, 2, {
					    role: 'tooltip',
					    type: 'string',
					    calc: function (dt, row) {
					      // build tooltip
					      var dateBegin = dt.getValue(row, 3);
					      var dateEnd = dt.getValue(row, 4);
					      var oneMinute = (60 * 1000);
					      var duration = (dateEnd.getTime() - dateBegin.getTime()) / oneMinute;

					      var tooltip = '<div>';
					      tooltip += '<div class="ggl-tooltip"><span>Profissional:</span>&nbsp;' + dt.getValue(row, 0) + "<br />";
					      tooltip += '<span>Paciente:</span>&nbsp;' + dt.getValue(row, 2) + "<br />";
					      tooltip += '<span>Telefone:</span>&nbsp;' + dt.getValue(row, 6) + "</div>";
					      tooltip += '<div class="ggl-tooltip"><span>InÃ­cio:</span>&nbsp;' + formatTime.formatValue(dateBegin) + ' - ';
					      tooltip += '<span>Fim:</span>&nbsp;' + formatTime.formatValue(dateEnd) + '<br />';
					      tooltip += '<span>DuraÃ§Ã£o:</span>&nbsp;' + duration.toFixed(0) + ' minutos</div></div>';
					      tooltip += '<div class="ggl-tooltip"><span>Cadeira: </span>' + dt.getValue(row, 5).replaceAll("Cadeira ", "") + '</div></div>';

					      return tooltip;
					    },
					    p: {html: true}
					  }, 3, 4]);

					chart.draw(view.toDataTable(), options);
				}
			}
			function drawChartProfissionais(backendValue) {
				montaTimeline(backendValue, 0, 'chartAtendimentos');
			}
			function drawChartCadeiras(backendValue) {
				montaTimeline(backendValue, 5, 'chartCadeiras');
			}
			
			function atualizaGraficos() {
				var value = document.getElementById("lume:selectVisualizacao").getElementsByClassName("ui-state-active")[0].children[0].value;
				if(value == 'P')
					loadProfissionaisChart();
				else if(value == 'C')
					loadCadeirasChart();
				//else if(value == 'S')
				//	updateVisualizacao();
				if(PF('myschedule'))
					PF('myschedule').update();
			}
			
			if (PrimeFaces.widget.Schedule != undefined) {
				PrimeFaces.widget.Schedule.prototype._oldInit = PrimeFaces.widget.Schedule.prototype.init;
				PrimeFaces.widget.Schedule.prototype.init = function(cfg) {
					cfg.views = {
						month : {
							columnFormat : 'ddd'
						},
						week : {
							columnFormat : 'ddd D/MM'
						},
						day : {
							columnFormat : 'dddd'
						}
					};
					this._oldInit.apply(this, arguments);
				};
			}
			
			function printSchedule() {				
				var elm = document.getElementById("lume:schedule");
				var toPrint = elm.cloneNode(true);
				toPrint.style.fontFamily = "sans-serif";
				
				var header = toPrint.getElementsByClassName("fc-header-toolbar")[0];
				header.style.fontSize = ".7em";
				header.style.borderLeft = "solid 1px black";
				header.style.borderTop = "solid 1px black";
				header.style.borderRight = "solid 1px black";
				header.style.marginBottom = "0";
				var header2Del = header.getElementsByClassName("fc-left")[0];
				header2Del.parentNode.removeChild(header2Del);
				header2Del = header.getElementsByClassName("fc-right")[0];
				header2Del.parentNode.removeChild(header2Del);
				header2Del = header.getElementsByClassName("fc-clear")[0];
				header2Del.parentNode.removeChild(header2Del);
				var header2Change = header.getElementsByClassName("fc-center")[0];
				header2Change.style.margin = ".5em";
				
				var monthButton = document.getElementsByClassName("fc-month-button")[0];
				if(!monthButton.classList.contains("ui-state-active")) {									
					var horasColumn = toPrint.getElementsByClassName("fc-slats")[0].getElementsByTagName("tr");
					for(var i = 0; i < horasColumn.length; i++) {
						var nowStr = "" + new Date().getTime();
						horasColumn[i].setAttribute("id", nowStr + i);
					}
					
					var divHeight = toPrint.getElementsByClassName("fc-body")[0].getElementsByClassName("fc-scroller")[0];
					divHeight.style.removeProperty("height");
					divHeight.style.transform = "scale(1, .71) translateY(-275px)";
					divHeight.style.marginBottom = "-389.76px";
					//configuraÃ§Ãµes para escala 100% e folha A4
				}
				
				var newWin = window.open("");
				newWin.document.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.2.5/fullcalendar.css\" rel=\"stylesheet\" type=\"text/css\" \/>");
				//newWin.document.write("<link href=\"http://cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.2.5/fullcalendar.print.css\" rel=\"stylesheet\" type=\"text/css\" media=\"print\" \/>");
				//newWin.document.write("<script src=\"http://cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.2.5/fullcalendar.min.js\"><\/script>");
				//newWin.document.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js\"><\/script>");
				//newWin.document.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js\"><\/script>");
				newWin.document.write(toPrint.outerHTML);
				newWin.document.close();
				newWin.focus();
				
				var monthButton = document.getElementsByClassName("fc-month-button")[0];
				if(!monthButton.classList.contains("ui-state-active")) {
					var divsAg = newWin.document.getElementsByClassName("fc-content-skeleton")[0].getElementsByClassName("fc-time-grid-event");
					var horasColumn = newWin.document.getElementsByClassName("fc-slats")[0].getElementsByTagName("tr");
					var horaHeight = 24; //horasColumn[0].children[0].offsetHeight;
					var horaInit = parseInt(horasColumn[0].children[0].innerText.split(":")[0]);
					for(var i = 0; i < divsAg.length; i++) {
						var divAg = divsAg[i];
						var title = divAg.getElementsByClassName("fc-title")[0];
						title.style.color = "#000";
						var time = divAg.getElementsByClassName("fc-time")[0];
						time.style.color = "#000";
						
						console.log("====================================================================");
						var horaElm = time.children[0];
						// 1 hora dividido em 4 quadros de 15 minutos cada com 24 de altura = (24 * 4) / 60
						var stepMinute = (horaHeight * 4) / 60;
						var horaFull = horaElm.innerText;
						horaFull = horaFull.split(" ")[0];
						
						var hora = horaFull.split(":")[0];
						var minuto = horaFull.split(":")[1];
						
						var topFuturo = ((hora - horaInit) * horaHeight) * 4;
						topFuturo += minuto * stepMinute;
						
						var topAtual = Math.abs(divAg.style.top.replaceAll("px", ""));
						var bottomAtual = Math.abs(divAg.style.bottom.replaceAll("px", ""));
						
						var diff = Math.abs(bottomAtual / topAtual);
						divAg.style.top = topFuturo + "px";
						divAg.style.bottom = ((topFuturo * diff) * (-1)) + "px";
					}
				}
				
				setTimeout(function() {
					newWin.print();
					newWin.close();
				}, 200);
			}
			
			function printTimeline() {				
				var value = document.getElementById("lume:selectVisualizacao").getElementsByClassName("ui-state-active")[0].children[0].value;
				var id = null;
				if(value == 'P')
					id = 'chartAtendimentos';
				else if(value == 'C')
					id = 'chartCadeiras';
				else return;
				var elm = document.getElementById(id);
				var toPrint = elm.cloneNode(true);
				toPrint.style.fontFamily = "sans-serif";
				
				var newWin = window.open("");
				newWin.document.write("<style type=\"text/css\" media=\"print\">@page { size: landscape; }</style>")
				newWin.document.write(toPrint.outerHTML);
				newWin.document.close();
				newWin.focus();				
				
				var divChangeScale = newWin.document.getElementById(id).children[0].children[0];
				var atualWidth = divChangeScale.style.width.replaceAll("px", "");
				if(atualWidth > 1452) {
					var relacao = 1452 / atualWidth;
					var distanciaY = (Math.abs(atualWidth - 1452) / 2) + 11;
					divChangeScale.style.transform = "scale(" + relacao + ") translate(-" + distanciaY + "px, -15px)";
				}
				
				newWin.print();
				newWin.close();
			}

			function handleDialogRequest(xhr, status, args) {
				console.debug('handleDialogRequest');
				console.debug(args);
				if (args.remarcado == true) {
					PF('remarcado').show();
				}
				if (args.afastamento == true) {
					PF('eventDialog').show();
					window.scrollTo(0, 0);
				}
				if (args.hora == false) {
					PF('insertConfirmation').show()
				}
				if (args.dlg == true) {
					PF('eventDialog').hide();
				} else {
					window.scrollTo(0, 0);
				}
			}
			//]]>
		</script>

		<p:confirmDialog id="confirmDialog"
			message=" VocÃª tem certeza que deseja excluir o agendamento?"
			header="Excluir agendamento?" severity="alert"
			widgetVar="confirmation" appendToBody="true">
			<p:commandButton id="confirm" value="Sim"
				update=":lume:pnAgendamento"
				oncomplete="PF('myschedule').update();PF('eventDialog').hide();"
				onclick="PF('confirmation').hide();"
				actionListener="#{agendamentoMB.actionRemove}" process="@this" />
			<p:commandButton id="decline" value="NÃ£o"
				onclick="PF('confirmation').hide()" type="button" />
		</p:confirmDialog>
		<p:confirmDialog id="confirmInsertDialog" message=""
			header="Incluir agendamento?" severity="alert"
			widgetVar="insertConfirmation">
			<f:facet name="message">
				<h:outputText
					value="Profissional nÃ£o estÃ¡ cadastrado para atender nesse horÃ¡rio." />
				<br />
				<h:outputText
					value="VocÃª tem certeza que deseja incluir o agendamento?" />
			</f:facet>
			<p:commandButton id="confirmInsert" value="Sim"
				onclick="PF('insertConfirmation').hide();" type="button" />
			<p:commandButton id="declineInsert" value="NÃ£o"
				onclick="PF('insertConfirmation').hide();PF('eventDialog').hide(); "
				type="button" />
		</p:confirmDialog>
		<p:confirmDialog id="confirmDialogSair"
			message=" VocÃª tem certeza que deseja sair sem salvar?"
			header="Deseja sair sem salvar?" severity="alert"
			widgetVar="sairConfirmation" appendToBody="true">
			<p:commandButton id="confirm2" value="Sim"
				onclick="PF('sairConfirmation').hide();PF('eventDialog').hide()"
				process="@this" />
			<p:commandButton id="decline3" value="NÃ£o"
				onclick="PF('sairConfirmation').hide();PF('eventDialog').show()"
				type="button" />

		</p:confirmDialog>

		<p:confirmDialog id="remarcado"
			message=" VocÃª tem certeza que deseja remarcar o agendamento?"
			header="Remarcadar" severity="alert" widgetVar="remarcado"
			appendToBody="true">
			<p:commandButton id="confirmRemarcado" value="Sim"
				onclick="PF('remarcado').hide();" process="@this" />
			<p:commandButton id="declineRemarcado" value="NÃ£o"
				onclick="PF('remarcado').hide();PF('eventDialog').hide()"
				type="button" />

		</p:confirmDialog>

	</ui:define>

</ui:composition>